// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cefhost.proto
// Protobuf C++ Version: 6.31.1

#ifndef cefhost_2eproto_2epb_2eh
#define cefhost_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cefhost_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cefhost_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_cefhost_2eproto;
}  // extern "C"
namespace cefhost {
class CefRequest;
struct CefRequestDefaultTypeInternal;
extern CefRequestDefaultTypeInternal _CefRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CefRequest_class_data_;
class CefRequest_ParamMapEntry_DoNotUse;
struct CefRequest_ParamMapEntry_DoNotUseDefaultTypeInternal;
extern CefRequest_ParamMapEntry_DoNotUseDefaultTypeInternal _CefRequest_ParamMapEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CefRequest_ParamMapEntry_DoNotUse_class_data_;
class CefResponse;
struct CefResponseDefaultTypeInternal;
extern CefResponseDefaultTypeInternal _CefResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CefResponse_class_data_;
class CefResponse_ParamMapEntry_DoNotUse;
struct CefResponse_ParamMapEntry_DoNotUseDefaultTypeInternal;
extern CefResponse_ParamMapEntry_DoNotUseDefaultTypeInternal _CefResponse_ParamMapEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CefResponse_ParamMapEntry_DoNotUse_class_data_;
class Param;
struct ParamDefaultTypeInternal;
extern ParamDefaultTypeInternal _Param_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Param_class_data_;
class ParamList;
struct ParamListDefaultTypeInternal;
extern ParamListDefaultTypeInternal _ParamList_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ParamList_class_data_;
}  // namespace cefhost
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cefhost {

// ===================================================================


// -------------------------------------------------------------------

class Param final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cefhost.Param) */ {
 public:
  inline Param() : Param(nullptr) {}
  ~Param() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Param* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Param));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Param(::google::protobuf::internal::ConstantInitialized);

  inline Param(const Param& from) : Param(nullptr, from) {}
  inline Param(Param&& from) noexcept
      : Param(nullptr, ::std::move(from)) {}
  inline Param& operator=(const Param& from) {
    CopyFrom(from);
    return *this;
  }
  inline Param& operator=(Param&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Param& default_instance() {
    return *reinterpret_cast<const Param*>(
        &_Param_default_instance_);
  }
  enum ValueCase {
    kIntVal = 1,
    kUintVal = 2,
    kInt64Val = 3,
    kUint64Val = 4,
    kStrVal = 5,
    kBoolVal = 6,
    kDoubleVal = 7,
    kFloatVal = 8,
    kBinVal = 9,
    kArrayVal = 10,
    VALUE_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Param& a, Param& b) { a.Swap(&b); }
  inline void Swap(Param* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Param* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Param* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Param>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Param& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Param& from) { Param::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Param* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cefhost.Param"; }

 protected:
  explicit Param(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Param(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Param& from);
  Param(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Param&& from) noexcept
      : Param(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIntValFieldNumber = 1,
    kUintValFieldNumber = 2,
    kInt64ValFieldNumber = 3,
    kUint64ValFieldNumber = 4,
    kStrValFieldNumber = 5,
    kBoolValFieldNumber = 6,
    kDoubleValFieldNumber = 7,
    kFloatValFieldNumber = 8,
    kBinValFieldNumber = 9,
    kArrayValFieldNumber = 10,
  };
  // int32 intVal = 1;
  bool has_intval() const;
  void clear_intval() ;
  ::int32_t intval() const;
  void set_intval(::int32_t value);

  private:
  ::int32_t _internal_intval() const;
  void _internal_set_intval(::int32_t value);

  public:
  // uint32 uintVal = 2;
  bool has_uintval() const;
  void clear_uintval() ;
  ::uint32_t uintval() const;
  void set_uintval(::uint32_t value);

  private:
  ::uint32_t _internal_uintval() const;
  void _internal_set_uintval(::uint32_t value);

  public:
  // int64 int64Val = 3;
  bool has_int64val() const;
  void clear_int64val() ;
  ::int64_t int64val() const;
  void set_int64val(::int64_t value);

  private:
  ::int64_t _internal_int64val() const;
  void _internal_set_int64val(::int64_t value);

  public:
  // uint64 uint64Val = 4;
  bool has_uint64val() const;
  void clear_uint64val() ;
  ::uint64_t uint64val() const;
  void set_uint64val(::uint64_t value);

  private:
  ::uint64_t _internal_uint64val() const;
  void _internal_set_uint64val(::uint64_t value);

  public:
  // string strVal = 5;
  bool has_strval() const;
  void clear_strval() ;
  const ::std::string& strval() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_strval(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_strval();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_strval();
  void set_allocated_strval(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_strval() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_strval(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_strval();

  public:
  // bool boolVal = 6;
  bool has_boolval() const;
  void clear_boolval() ;
  bool boolval() const;
  void set_boolval(bool value);

  private:
  bool _internal_boolval() const;
  void _internal_set_boolval(bool value);

  public:
  // double doubleVal = 7;
  bool has_doubleval() const;
  void clear_doubleval() ;
  double doubleval() const;
  void set_doubleval(double value);

  private:
  double _internal_doubleval() const;
  void _internal_set_doubleval(double value);

  public:
  // float floatVal = 8;
  bool has_floatval() const;
  void clear_floatval() ;
  float floatval() const;
  void set_floatval(float value);

  private:
  float _internal_floatval() const;
  void _internal_set_floatval(float value);

  public:
  // bytes binVal = 9;
  bool has_binval() const;
  void clear_binval() ;
  const ::std::string& binval() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_binval(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_binval();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_binval();
  void set_allocated_binval(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_binval() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_binval(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_binval();

  public:
  // .cefhost.ParamList arrayVal = 10;
  bool has_arrayval() const;
  private:
  bool _internal_has_arrayval() const;

  public:
  void clear_arrayval() ;
  const ::cefhost::ParamList& arrayval() const;
  [[nodiscard]] ::cefhost::ParamList* PROTOBUF_NULLABLE release_arrayval();
  ::cefhost::ParamList* PROTOBUF_NONNULL mutable_arrayval();
  void set_allocated_arrayval(::cefhost::ParamList* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_arrayval(::cefhost::ParamList* PROTOBUF_NULLABLE value);
  ::cefhost::ParamList* PROTOBUF_NULLABLE unsafe_arena_release_arrayval();

  private:
  const ::cefhost::ParamList& _internal_arrayval() const;
  ::cefhost::ParamList* PROTOBUF_NONNULL _internal_mutable_arrayval();

  public:
  void clear_value();
  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:cefhost.Param)
 private:
  class _Internal;
  void set_has_intval();
  void set_has_uintval();
  void set_has_int64val();
  void set_has_uint64val();
  void set_has_strval();
  void set_has_boolval();
  void set_has_doubleval();
  void set_has_floatval();
  void set_has_binval();
  void set_has_arrayval();
  inline bool has_value() const;
  inline void clear_has_value();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 10,
                                   1, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Param& from_msg);
    union ValueUnion {
      constexpr ValueUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t intval_;
      ::uint32_t uintval_;
      ::int64_t int64val_;
      ::uint64_t uint64val_;
      ::google::protobuf::internal::ArenaStringPtr strval_;
      bool boolval_;
      double doubleval_;
      float floatval_;
      ::google::protobuf::internal::ArenaStringPtr binval_;
      ::cefhost::ParamList* PROTOBUF_NULLABLE arrayval_;
    } value_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cefhost_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Param_class_data_;
// -------------------------------------------------------------------

class ParamList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cefhost.ParamList) */ {
 public:
  inline ParamList() : ParamList(nullptr) {}
  ~ParamList() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ParamList* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ParamList));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ParamList(::google::protobuf::internal::ConstantInitialized);

  inline ParamList(const ParamList& from) : ParamList(nullptr, from) {}
  inline ParamList(ParamList&& from) noexcept
      : ParamList(nullptr, ::std::move(from)) {}
  inline ParamList& operator=(const ParamList& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParamList& operator=(ParamList&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParamList& default_instance() {
    return *reinterpret_cast<const ParamList*>(
        &_ParamList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ParamList& a, ParamList& b) { a.Swap(&b); }
  inline void Swap(ParamList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParamList* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParamList* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ParamList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParamList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ParamList& from) { ParamList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ParamList* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cefhost.ParamList"; }

 protected:
  explicit ParamList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ParamList(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ParamList& from);
  ParamList(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ParamList&& from) noexcept
      : ParamList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .cefhost.Param items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::cefhost::Param* PROTOBUF_NONNULL mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL _internal_mutable_items();
  public:
  const ::cefhost::Param& items(int index) const;
  ::cefhost::Param* PROTOBUF_NONNULL add_items();
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& items() const;
  // @@protoc_insertion_point(class_scope:cefhost.ParamList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ParamList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cefhost::Param > items_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cefhost_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ParamList_class_data_;
// -------------------------------------------------------------------

class CefResponse_ParamMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  CefResponse_ParamMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CefResponse_ParamMapEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit CefResponse_ParamMapEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_CefResponse_ParamMapEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_cefhost_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 45,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull CefResponse_ParamMapEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class CefRequest_ParamMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  CefRequest_ParamMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CefRequest_ParamMapEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit CefRequest_ParamMapEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_CefRequest_ParamMapEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_cefhost_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 44,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull CefRequest_ParamMapEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class CefResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cefhost.CefResponse) */ {
 public:
  inline CefResponse() : CefResponse(nullptr) {}
  ~CefResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CefResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CefResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CefResponse(::google::protobuf::internal::ConstantInitialized);

  inline CefResponse(const CefResponse& from) : CefResponse(nullptr, from) {}
  inline CefResponse(CefResponse&& from) noexcept
      : CefResponse(nullptr, ::std::move(from)) {}
  inline CefResponse& operator=(const CefResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CefResponse& operator=(CefResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CefResponse& default_instance() {
    return *reinterpret_cast<const CefResponse*>(
        &_CefResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(CefResponse& a, CefResponse& b) { a.Swap(&b); }
  inline void Swap(CefResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CefResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CefResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CefResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CefResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CefResponse& from) { CefResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CefResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cefhost.CefResponse"; }

 protected:
  explicit CefResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CefResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CefResponse& from);
  CefResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CefResponse&& from) noexcept
      : CefResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamListFieldNumber = 1,
    kParamMapFieldNumber = 2,
  };
  // repeated .cefhost.Param paramList = 1;
  int paramlist_size() const;
  private:
  int _internal_paramlist_size() const;

  public:
  void clear_paramlist() ;
  ::cefhost::Param* PROTOBUF_NONNULL mutable_paramlist(int index);
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL mutable_paramlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& _internal_paramlist() const;
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL _internal_mutable_paramlist();
  public:
  const ::cefhost::Param& paramlist(int index) const;
  ::cefhost::Param* PROTOBUF_NONNULL add_paramlist();
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& paramlist() const;
  // map<string, .cefhost.Param> paramMap = 2;
  int parammap_size() const;
  private:
  int _internal_parammap_size() const;

  public:
  void clear_parammap() ;
  const ::google::protobuf::Map<std::string, ::cefhost::Param>& parammap() const;
  ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL mutable_parammap();

  private:
  const ::google::protobuf::Map<std::string, ::cefhost::Param>& _internal_parammap() const;
  ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL _internal_mutable_parammap();

  public:
  // @@protoc_insertion_point(class_scope:cefhost.CefResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   3, 36,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CefResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cefhost::Param > paramlist_;
    ::google::protobuf::internal::MapField<CefResponse_ParamMapEntry_DoNotUse, std::string, ::cefhost::Param,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        parammap_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cefhost_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CefResponse_class_data_;
// -------------------------------------------------------------------

class CefRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cefhost.CefRequest) */ {
 public:
  inline CefRequest() : CefRequest(nullptr) {}
  ~CefRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CefRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CefRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CefRequest(::google::protobuf::internal::ConstantInitialized);

  inline CefRequest(const CefRequest& from) : CefRequest(nullptr, from) {}
  inline CefRequest(CefRequest&& from) noexcept
      : CefRequest(nullptr, ::std::move(from)) {}
  inline CefRequest& operator=(const CefRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CefRequest& operator=(CefRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CefRequest& default_instance() {
    return *reinterpret_cast<const CefRequest*>(
        &_CefRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CefRequest& a, CefRequest& b) { a.Swap(&b); }
  inline void Swap(CefRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CefRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CefRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CefRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CefRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CefRequest& from) { CefRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CefRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cefhost.CefRequest"; }

 protected:
  explicit CefRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CefRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CefRequest& from);
  CefRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CefRequest&& from) noexcept
      : CefRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamListFieldNumber = 1,
    kParamMapFieldNumber = 2,
  };
  // repeated .cefhost.Param paramList = 1;
  int paramlist_size() const;
  private:
  int _internal_paramlist_size() const;

  public:
  void clear_paramlist() ;
  ::cefhost::Param* PROTOBUF_NONNULL mutable_paramlist(int index);
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL mutable_paramlist();

  private:
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& _internal_paramlist() const;
  ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL _internal_mutable_paramlist();
  public:
  const ::cefhost::Param& paramlist(int index) const;
  ::cefhost::Param* PROTOBUF_NONNULL add_paramlist();
  const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& paramlist() const;
  // map<string, .cefhost.Param> paramMap = 2;
  int parammap_size() const;
  private:
  int _internal_parammap_size() const;

  public:
  void clear_parammap() ;
  const ::google::protobuf::Map<std::string, ::cefhost::Param>& parammap() const;
  ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL mutable_parammap();

  private:
  const ::google::protobuf::Map<std::string, ::cefhost::Param>& _internal_parammap() const;
  ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL _internal_mutable_parammap();

  public:
  // @@protoc_insertion_point(class_scope:cefhost.CefRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   3, 35,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CefRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::cefhost::Param > paramlist_;
    ::google::protobuf::internal::MapField<CefRequest_ParamMapEntry_DoNotUse, std::string, ::cefhost::Param,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        parammap_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cefhost_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CefRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ParamList

// repeated .cefhost.Param items = 1;
inline int ParamList::_internal_items_size() const {
  return _internal_items().size();
}
inline int ParamList::items_size() const {
  return _internal_items_size();
}
inline void ParamList::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::cefhost::Param* PROTOBUF_NONNULL ParamList::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cefhost.ParamList.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL ParamList::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cefhost.ParamList.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::cefhost::Param& ParamList::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.ParamList.items)
  return _internal_items().Get(index);
}
inline ::cefhost::Param* PROTOBUF_NONNULL ParamList::add_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cefhost::Param* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:cefhost.ParamList.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& ParamList::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cefhost.ParamList.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>&
ParamList::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL
ParamList::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// Param

// int32 intVal = 1;
inline bool Param::has_intval() const {
  return value_case() == kIntVal;
}
inline void Param::set_has_intval() {
  _impl_._oneof_case_[0] = kIntVal;
}
inline void Param::clear_intval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kIntVal) {
    _impl_.value_.intval_ = 0;
    clear_has_value();
  }
}
inline ::int32_t Param::intval() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.intVal)
  return _internal_intval();
}
inline void Param::set_intval(::int32_t value) {
  if (value_case() != kIntVal) {
    clear_value();
    set_has_intval();
  }
  _impl_.value_.intval_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.intVal)
}
inline ::int32_t Param::_internal_intval() const {
  if (value_case() == kIntVal) {
    return _impl_.value_.intval_;
  }
  return 0;
}

// uint32 uintVal = 2;
inline bool Param::has_uintval() const {
  return value_case() == kUintVal;
}
inline void Param::set_has_uintval() {
  _impl_._oneof_case_[0] = kUintVal;
}
inline void Param::clear_uintval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kUintVal) {
    _impl_.value_.uintval_ = 0u;
    clear_has_value();
  }
}
inline ::uint32_t Param::uintval() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.uintVal)
  return _internal_uintval();
}
inline void Param::set_uintval(::uint32_t value) {
  if (value_case() != kUintVal) {
    clear_value();
    set_has_uintval();
  }
  _impl_.value_.uintval_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.uintVal)
}
inline ::uint32_t Param::_internal_uintval() const {
  if (value_case() == kUintVal) {
    return _impl_.value_.uintval_;
  }
  return 0u;
}

// int64 int64Val = 3;
inline bool Param::has_int64val() const {
  return value_case() == kInt64Val;
}
inline void Param::set_has_int64val() {
  _impl_._oneof_case_[0] = kInt64Val;
}
inline void Param::clear_int64val() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kInt64Val) {
    _impl_.value_.int64val_ = ::int64_t{0};
    clear_has_value();
  }
}
inline ::int64_t Param::int64val() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.int64Val)
  return _internal_int64val();
}
inline void Param::set_int64val(::int64_t value) {
  if (value_case() != kInt64Val) {
    clear_value();
    set_has_int64val();
  }
  _impl_.value_.int64val_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.int64Val)
}
inline ::int64_t Param::_internal_int64val() const {
  if (value_case() == kInt64Val) {
    return _impl_.value_.int64val_;
  }
  return ::int64_t{0};
}

// uint64 uint64Val = 4;
inline bool Param::has_uint64val() const {
  return value_case() == kUint64Val;
}
inline void Param::set_has_uint64val() {
  _impl_._oneof_case_[0] = kUint64Val;
}
inline void Param::clear_uint64val() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kUint64Val) {
    _impl_.value_.uint64val_ = ::uint64_t{0u};
    clear_has_value();
  }
}
inline ::uint64_t Param::uint64val() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.uint64Val)
  return _internal_uint64val();
}
inline void Param::set_uint64val(::uint64_t value) {
  if (value_case() != kUint64Val) {
    clear_value();
    set_has_uint64val();
  }
  _impl_.value_.uint64val_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.uint64Val)
}
inline ::uint64_t Param::_internal_uint64val() const {
  if (value_case() == kUint64Val) {
    return _impl_.value_.uint64val_;
  }
  return ::uint64_t{0u};
}

// string strVal = 5;
inline bool Param::has_strval() const {
  return value_case() == kStrVal;
}
inline void Param::set_has_strval() {
  _impl_._oneof_case_[0] = kStrVal;
}
inline void Param::clear_strval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kStrVal) {
    _impl_.value_.strval_.Destroy();
    clear_has_value();
  }
}
inline const ::std::string& Param::strval() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.Param.strVal)
  return _internal_strval();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Param::set_strval(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrVal) {
    clear_value();

    set_has_strval();
    _impl_.value_.strval_.InitDefault();
  }
  _impl_.value_.strval_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cefhost.Param.strVal)
}
inline ::std::string* PROTOBUF_NONNULL Param::mutable_strval()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_strval();
  // @@protoc_insertion_point(field_mutable:cefhost.Param.strVal)
  return _s;
}
inline const ::std::string& Param::_internal_strval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kStrVal) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.strval_.Get();
}
inline void Param::_internal_set_strval(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrVal) {
    clear_value();

    set_has_strval();
    _impl_.value_.strval_.InitDefault();
  }
  _impl_.value_.strval_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Param::_internal_mutable_strval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kStrVal) {
    clear_value();

    set_has_strval();
    _impl_.value_.strval_.InitDefault();
  }
  return _impl_.value_.strval_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Param::release_strval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cefhost.Param.strVal)
  if (value_case() != kStrVal) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.strval_.Release();
}
inline void Param::set_allocated_strval(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_strval();
    _impl_.value_.strval_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cefhost.Param.strVal)
}

// bool boolVal = 6;
inline bool Param::has_boolval() const {
  return value_case() == kBoolVal;
}
inline void Param::set_has_boolval() {
  _impl_._oneof_case_[0] = kBoolVal;
}
inline void Param::clear_boolval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBoolVal) {
    _impl_.value_.boolval_ = false;
    clear_has_value();
  }
}
inline bool Param::boolval() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.boolVal)
  return _internal_boolval();
}
inline void Param::set_boolval(bool value) {
  if (value_case() != kBoolVal) {
    clear_value();
    set_has_boolval();
  }
  _impl_.value_.boolval_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.boolVal)
}
inline bool Param::_internal_boolval() const {
  if (value_case() == kBoolVal) {
    return _impl_.value_.boolval_;
  }
  return false;
}

// double doubleVal = 7;
inline bool Param::has_doubleval() const {
  return value_case() == kDoubleVal;
}
inline void Param::set_has_doubleval() {
  _impl_._oneof_case_[0] = kDoubleVal;
}
inline void Param::clear_doubleval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kDoubleVal) {
    _impl_.value_.doubleval_ = 0;
    clear_has_value();
  }
}
inline double Param::doubleval() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.doubleVal)
  return _internal_doubleval();
}
inline void Param::set_doubleval(double value) {
  if (value_case() != kDoubleVal) {
    clear_value();
    set_has_doubleval();
  }
  _impl_.value_.doubleval_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.doubleVal)
}
inline double Param::_internal_doubleval() const {
  if (value_case() == kDoubleVal) {
    return _impl_.value_.doubleval_;
  }
  return 0;
}

// float floatVal = 8;
inline bool Param::has_floatval() const {
  return value_case() == kFloatVal;
}
inline void Param::set_has_floatval() {
  _impl_._oneof_case_[0] = kFloatVal;
}
inline void Param::clear_floatval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kFloatVal) {
    _impl_.value_.floatval_ = 0;
    clear_has_value();
  }
}
inline float Param::floatval() const {
  // @@protoc_insertion_point(field_get:cefhost.Param.floatVal)
  return _internal_floatval();
}
inline void Param::set_floatval(float value) {
  if (value_case() != kFloatVal) {
    clear_value();
    set_has_floatval();
  }
  _impl_.value_.floatval_ = value;
  // @@protoc_insertion_point(field_set:cefhost.Param.floatVal)
}
inline float Param::_internal_floatval() const {
  if (value_case() == kFloatVal) {
    return _impl_.value_.floatval_;
  }
  return 0;
}

// bytes binVal = 9;
inline bool Param::has_binval() const {
  return value_case() == kBinVal;
}
inline void Param::set_has_binval() {
  _impl_._oneof_case_[0] = kBinVal;
}
inline void Param::clear_binval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kBinVal) {
    _impl_.value_.binval_.Destroy();
    clear_has_value();
  }
}
inline const ::std::string& Param::binval() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.Param.binVal)
  return _internal_binval();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Param::set_binval(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinVal) {
    clear_value();

    set_has_binval();
    _impl_.value_.binval_.InitDefault();
  }
  _impl_.value_.binval_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cefhost.Param.binVal)
}
inline ::std::string* PROTOBUF_NONNULL Param::mutable_binval()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_binval();
  // @@protoc_insertion_point(field_mutable:cefhost.Param.binVal)
  return _s;
}
inline const ::std::string& Param::_internal_binval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (value_case() != kBinVal) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.value_.binval_.Get();
}
inline void Param::_internal_set_binval(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinVal) {
    clear_value();

    set_has_binval();
    _impl_.value_.binval_.InitDefault();
  }
  _impl_.value_.binval_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Param::_internal_mutable_binval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() != kBinVal) {
    clear_value();

    set_has_binval();
    _impl_.value_.binval_.InitDefault();
  }
  return _impl_.value_.binval_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Param::release_binval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cefhost.Param.binVal)
  if (value_case() != kBinVal) {
    return nullptr;
  }
  clear_has_value();
  return _impl_.value_.binval_.Release();
}
inline void Param::set_allocated_binval(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_value()) {
    clear_value();
  }
  if (value != nullptr) {
    set_has_binval();
    _impl_.value_.binval_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cefhost.Param.binVal)
}

// .cefhost.ParamList arrayVal = 10;
inline bool Param::has_arrayval() const {
  return value_case() == kArrayVal;
}
inline bool Param::_internal_has_arrayval() const {
  return value_case() == kArrayVal;
}
inline void Param::set_has_arrayval() {
  _impl_._oneof_case_[0] = kArrayVal;
}
inline void Param::clear_arrayval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value_case() == kArrayVal) {
    if (GetArena() == nullptr) {
      delete _impl_.value_.arrayval_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.value_.arrayval_);
    }
    clear_has_value();
  }
}
inline ::cefhost::ParamList* PROTOBUF_NULLABLE Param::release_arrayval() {
  // @@protoc_insertion_point(field_release:cefhost.Param.arrayVal)
  if (value_case() == kArrayVal) {
    clear_has_value();
    auto* temp = _impl_.value_.arrayval_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.value_.arrayval_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cefhost::ParamList& Param::_internal_arrayval() const {
  return value_case() == kArrayVal ? *_impl_.value_.arrayval_ : reinterpret_cast<::cefhost::ParamList&>(::cefhost::_ParamList_default_instance_);
}
inline const ::cefhost::ParamList& Param::arrayval() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.Param.arrayVal)
  return _internal_arrayval();
}
inline ::cefhost::ParamList* PROTOBUF_NULLABLE Param::unsafe_arena_release_arrayval() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cefhost.Param.arrayVal)
  if (value_case() == kArrayVal) {
    clear_has_value();
    auto* temp = _impl_.value_.arrayval_;
    _impl_.value_.arrayval_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Param::unsafe_arena_set_allocated_arrayval(
    ::cefhost::ParamList* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_value();
  if (value) {
    set_has_arrayval();
    _impl_.value_.arrayval_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cefhost.Param.arrayVal)
}
inline ::cefhost::ParamList* PROTOBUF_NONNULL Param::_internal_mutable_arrayval() {
  if (value_case() != kArrayVal) {
    clear_value();
    set_has_arrayval();
    _impl_.value_.arrayval_ = 
        ::google::protobuf::Message::DefaultConstruct<::cefhost::ParamList>(GetArena());
  }
  return _impl_.value_.arrayval_;
}
inline ::cefhost::ParamList* PROTOBUF_NONNULL Param::mutable_arrayval()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cefhost::ParamList* _msg = _internal_mutable_arrayval();
  // @@protoc_insertion_point(field_mutable:cefhost.Param.arrayVal)
  return _msg;
}

inline bool Param::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Param::clear_has_value() {
  _impl_._oneof_case_[0] = VALUE_NOT_SET;
}
inline Param::ValueCase Param::value_case() const {
  return Param::ValueCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CefRequest

// repeated .cefhost.Param paramList = 1;
inline int CefRequest::_internal_paramlist_size() const {
  return _internal_paramlist().size();
}
inline int CefRequest::paramlist_size() const {
  return _internal_paramlist_size();
}
inline void CefRequest::clear_paramlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paramlist_.Clear();
}
inline ::cefhost::Param* PROTOBUF_NONNULL CefRequest::mutable_paramlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cefhost.CefRequest.paramList)
  return _internal_mutable_paramlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL CefRequest::mutable_paramlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cefhost.CefRequest.paramList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paramlist();
}
inline const ::cefhost::Param& CefRequest::paramlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.CefRequest.paramList)
  return _internal_paramlist().Get(index);
}
inline ::cefhost::Param* PROTOBUF_NONNULL CefRequest::add_paramlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cefhost::Param* _add = _internal_mutable_paramlist()->Add();
  // @@protoc_insertion_point(field_add:cefhost.CefRequest.paramList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& CefRequest::paramlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cefhost.CefRequest.paramList)
  return _internal_paramlist();
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>&
CefRequest::_internal_paramlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paramlist_;
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL
CefRequest::_internal_mutable_paramlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paramlist_;
}

// map<string, .cefhost.Param> paramMap = 2;
inline int CefRequest::_internal_parammap_size() const {
  return _internal_parammap().size();
}
inline int CefRequest::parammap_size() const {
  return _internal_parammap_size();
}
inline void CefRequest::clear_parammap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parammap_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::cefhost::Param>& CefRequest::_internal_parammap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parammap_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::cefhost::Param>& CefRequest::parammap() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:cefhost.CefRequest.paramMap)
  return _internal_parammap();
}
inline ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL CefRequest::_internal_mutable_parammap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parammap_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL CefRequest::mutable_parammap()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:cefhost.CefRequest.paramMap)
  return _internal_mutable_parammap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// CefResponse

// repeated .cefhost.Param paramList = 1;
inline int CefResponse::_internal_paramlist_size() const {
  return _internal_paramlist().size();
}
inline int CefResponse::paramlist_size() const {
  return _internal_paramlist_size();
}
inline void CefResponse::clear_paramlist() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paramlist_.Clear();
}
inline ::cefhost::Param* PROTOBUF_NONNULL CefResponse::mutable_paramlist(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:cefhost.CefResponse.paramList)
  return _internal_mutable_paramlist()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL CefResponse::mutable_paramlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:cefhost.CefResponse.paramList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paramlist();
}
inline const ::cefhost::Param& CefResponse::paramlist(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cefhost.CefResponse.paramList)
  return _internal_paramlist().Get(index);
}
inline ::cefhost::Param* PROTOBUF_NONNULL CefResponse::add_paramlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::cefhost::Param* _add = _internal_mutable_paramlist()->Add();
  // @@protoc_insertion_point(field_add:cefhost.CefResponse.paramList)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>& CefResponse::paramlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:cefhost.CefResponse.paramList)
  return _internal_paramlist();
}
inline const ::google::protobuf::RepeatedPtrField<::cefhost::Param>&
CefResponse::_internal_paramlist() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paramlist_;
}
inline ::google::protobuf::RepeatedPtrField<::cefhost::Param>* PROTOBUF_NONNULL
CefResponse::_internal_mutable_paramlist() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paramlist_;
}

// map<string, .cefhost.Param> paramMap = 2;
inline int CefResponse::_internal_parammap_size() const {
  return _internal_parammap().size();
}
inline int CefResponse::parammap_size() const {
  return _internal_parammap_size();
}
inline void CefResponse::clear_parammap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parammap_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::cefhost::Param>& CefResponse::_internal_parammap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parammap_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::cefhost::Param>& CefResponse::parammap() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:cefhost.CefResponse.paramMap)
  return _internal_parammap();
}
inline ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL CefResponse::_internal_mutable_parammap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parammap_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::cefhost::Param>* PROTOBUF_NONNULL CefResponse::mutable_parammap()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:cefhost.CefResponse.paramMap)
  return _internal_mutable_parammap();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace cefhost


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cefhost_2eproto_2epb_2eh
